plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions{
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

dependencies {

    implementation project(path: ':domain')
    // retrofit
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.1'

    // Room
    implementation('androidx.room:room-runtime:2.4.2')
    kapt('androidx.room:room-compiler:2.4.2')

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.11.2'

    testImplementation("com.squareup.okhttp3:mockwebserver:4.10.0")

    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0'
    testImplementation 'org.assertj:assertj-core:3.10.0'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.4.0'
    testImplementation 'commons-io:commons-io:2.6'
}
tasks.withType(Test) {
    useJUnitPlatform()
}